{"version":3,"sources":["store/reducer.js","utility.js","store/actionHandle.js","store/sagas.js","store/index.js","mockData.js","components/MonthPickerCom.js","components/TotalPrice.js","components/PriceList.js","components/Charts.js","components/ViewTab.js","containers/Home.js","components/Tags.js","containers/Create.js","App.js","serviceWorker.js","index.js"],"names":["defaultState","tableData","chosenMonth","input","output","padLeft","num","setLocalStorage","key","value","_value","JSON","stringify","localStorage","setItem","getLocalStorage","getItem","parse","getToday","date","Date","getFullYear","getMonth","getDate","action","type","store","dispatch","month","isUpdate","mySaga","getTableData","actionHandle","submitCreate","i","length","id","push","e","delActivity","splice","substring","takeEvery","sagaMiddleware","createSagaMiddleware","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","createStore","state","_state","_input","_output","filter","item","forEach","category","Number","price","run","sagas","Mock","mock","MonthPicker","DatePicker","MonthPickerCom","props","onChange","changeMonth","defaultValue","moment","format","connect","inputPrice","outputPrice","className","confirm","Modal","PriceList","items","nextProps","this","setState","columns","title","dataIndex","render","text","record","color","name","width","onClick","handleDel","handleEdit","style","marginBottom","pagination","bordered","rowKey","dataSource","icon","ExclamationCircleOutlined","content","okText","okType","cancelText","onOk","visible","history","React","Component","withRouter","COLORS","Charts","inputData","outputData","initChartData","bind","inputView","outputView","height","dataKey","isAnimationActive","data","cx","cy","outerRadius","fill","label","map","entry","index","result","resultArr","PureComponent","TabPane","Tabs","defaultActiveKey","tab","AppleOutlined","AndroidOutlined","Home","initPage","to","ViewTab","dateString","nowMonth","getNowMonth","Tags","tags","categoryName","chooseClass","Create","inputTags","outputTags","submitData","Math","random","toggleTabs","dateChange","inputChange","backHome","getActivityDetail","match","params","marginLeft","_data","message","success","error","_submitData","target","locale","Header","Layout","Content","App","zhCN","path","exact","component","Boolean","location","hostname","RenderApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.25506907.chunk.js","sourcesContent":["const  defaultState = {\r\n    tableData:[],\r\n    chosenMonth:\"\",\r\n    input:'0',\r\n    output:'0',\r\n}\r\nexport default (state = defaultState,action)=>{\r\n    const _state = JSON.parse(JSON.stringify(state))\r\n    if(action.type === 'initTableData'){\r\n        let _input = 0\r\n        let _output = 0\r\n        _state.tableData = action.value.filter((item)=>{\r\n            return item.date.substring(0,7) === action.month\r\n        })\r\n        _state.tableData.forEach((item)=>{\r\n            if(item.category.type === 'outcome'){\r\n                _output += Number(item.price)\r\n            }\r\n            else if (item.category.type === 'income'){\r\n                _input += Number(item.price)\r\n            }\r\n        })\r\n        _state.input = _input\r\n        _state.output = _output\r\n    }\r\n    if(action.type === 'setMonth'){\r\n        _state.chosenMonth = action.value\r\n    }\r\n\r\n    return _state\r\n}\r\n","export const padLeft = (num) =>{\r\n    return num < 10 ? '0' + num : num\r\n}\r\nexport const judgeIO = (type,price) =>{\r\n    return type === 'outcome' ? '-' + price : '+' +price\r\n}\r\n\r\nexport const setLocalStorage = (key,value)=> {\r\n    const _value = JSON.stringify(value)\r\n    localStorage.setItem(key,_value)\r\n}\r\nexport const getLocalStorage = (key) =>{\r\n    return localStorage.getItem(key) ? JSON.parse(localStorage.getItem(key)):[]\r\n}\r\nexport const getNowMonth = () =>{\r\n    let date = new Date()\r\n    return date.getFullYear() + '-' + padLeft(date.getMonth()+1)\r\n}\r\nexport const getToday = () =>{\r\n    let date = new Date()\r\n    return date.getFullYear() + '-' + padLeft(date.getMonth()+1) + '-' + padLeft(date.getDate())\r\n}\r\n","import store from \"./index\";\r\n\r\n// 获取首页数据\r\nconst getTableData = (value) => {\r\n    const action = {\r\n        type:'getTableData',\r\n        value\r\n    }\r\n    store.dispatch(action)\r\n}\r\n// 初始化\r\nconst initTableData = (value,month) => {\r\n    const action = {\r\n        type:'initTableData',\r\n        value,\r\n        month,\r\n    }\r\n    store.dispatch(action)\r\n}\r\n\r\nconst setMonth = (value) => {\r\n    const action = {\r\n        type:'setMonth',\r\n        value\r\n    }\r\n    store.dispatch(action)\r\n}\r\nconst submitCreate = (value,isUpdate) => {\r\n    const action = {\r\n        type:'submitCreate',\r\n        value,\r\n        isUpdate\r\n    }\r\n    store.dispatch(action)\r\n}\r\nconst delActivity = (value) => {\r\n    const action = {\r\n        type:'delActivity',\r\n        value\r\n    }\r\n    store.dispatch(action)\r\n}\r\nexport default {\r\n    getTableData,\r\n    initTableData,\r\n    setMonth,\r\n    submitCreate,\r\n    delActivity,\r\n}\r\n","import {takeEvery} from 'redux-saga/effects'\r\nimport {getLocalStorage,setLocalStorage} from '../utility'\r\nimport actionHandle from './actionHandle'\r\nfunction getTableData(action) {\r\n    let tableData = getLocalStorage('tableData')\r\n    actionHandle.initTableData(tableData,action.value)\r\n}\r\nfunction submitCreate(action) {\r\n    let tableData = getLocalStorage('tableData')\r\n    if (action.isUpdate){\r\n        for (let i=0;i < tableData.length;i++){\r\n            if(tableData[i].id === action.value.id){\r\n                tableData[i] = action.value\r\n                setLocalStorage('tableData',tableData)\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        try {\r\n\r\n            tableData.push(action.value)\r\n            setLocalStorage('tableData',tableData)\r\n        }\r\n        catch (e) {\r\n            let tableData = [action.value]\r\n            setLocalStorage('tableData',tableData)\r\n        }\r\n    }\r\n}\r\nfunction delActivity(action) {\r\n    let tableData = getLocalStorage('tableData')\r\n    for (let i=0;i < tableData.length;i++){\r\n        if(tableData[i].id === action.value.id){\r\n            tableData.splice(i,1)\r\n        }\r\n    }\r\n    setLocalStorage('tableData',tableData)\r\n    actionHandle.initTableData(tableData,action.value.date.substring(0,7))\r\n}\r\nfunction* mySaga() {\r\n    yield takeEvery('getTableData',getTableData)\r\n    yield takeEvery('submitCreate',submitCreate)\r\n    yield takeEvery('delActivity',delActivity)\r\n}\r\n\r\nexport default mySaga;\r\n","import  {createStore,applyMiddleware,compose} from \"redux\";\r\nimport  reducer from './reducer'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport sagas from './sagas'\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n    applyMiddleware(sagaMiddleware),\r\n);\r\nconst store = createStore(reducer, enhancer);\r\nsagaMiddleware.run(sagas)\r\n\r\nexport default store\r\n","import Mock from 'mockjs'\r\n\r\nMock.mock('/api/getList',{\r\n    \"data\":[\r\n        {\r\n            \"id\": 1,\r\n            \"title\": '成都旅行',\r\n            \"price\": 3265,\r\n            \"date\": '2020-02-26',\r\n            \"category\": {\r\n                \"id\": 1,\r\n                'name': '旅行',\r\n                \"type\": 'outcome'\r\n            }\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"title\": '买iphone11',\r\n            \"price\": 200,\r\n            \"date\": '2020-03-26',\r\n            \"category\": {\r\n                \"id\": 1,\r\n                'name': '购物',\r\n                \"type\": 'outcome'\r\n            }\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"title\": '给富婆按摩',\r\n            \"price\": 200,\r\n            \"date\": '2020-02-26',\r\n            \"category\": {\r\n                \"id\": 1,\r\n                'name': '打工',\r\n                \"type\": 'income'\r\n            }\r\n        },\r\n    ]\r\n})\r\n","import React from 'react'\r\nimport { DatePicker } from 'antd';\r\nimport moment from 'moment';\r\nconst { MonthPicker } = DatePicker;\r\nconst monthFormat = 'YYYY-MM';\r\nconst MonthPickerCom= (props) =>  {\r\n    return (\r\n        <div>\r\n            <span>选择月份:</span>\r\n            <MonthPicker\r\n                onChange={props.changeMonth}\r\n                defaultValue={moment(props.month, monthFormat)}\r\n                format={monthFormat}\r\n            >\r\n            </MonthPicker>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default MonthPickerCom\r\n","import React from 'react'\r\nimport './TotalPrice.scss'\r\nimport {connect} from \"react-redux\";\r\nconst TotalPrice = (props)=>{\r\n    return (\r\n        <div className=\"TotalPrice-ctn\">\r\n            <div>\r\n                <span>收入</span>\r\n                <span>￥{props.inputPrice}</span>\r\n            </div>\r\n            <div>\r\n                <span>支付</span>\r\n                <span>￥{props.outputPrice}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        inputPrice:state.input,\r\n        outputPrice:state.output,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TotalPrice);\r\n","import React from 'react'\r\nimport { Table , Button ,Tag , Modal} from 'antd';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport {judgeIO} from '../utility'\r\nimport actionHandle from \"../store/actionHandle\";\r\nconst { confirm } = Modal;\r\nclass PriceList extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            tableData:props.items,\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState(()=>({\r\n            tableData:nextProps.items\r\n        }))\r\n    }\r\n    render() {\r\n        const columns =[\r\n            {\r\n                title: '类别',\r\n                dataIndex: 'category',\r\n                key: 'category',\r\n                render: (text, record) => (\r\n                    <Tag color=\"volcano\">{record.category.name}</Tag>\r\n                )\r\n            },\r\n            {\r\n                title: '活动',\r\n                dataIndex: 'title',\r\n                key: 'title',\r\n\r\n            },\r\n            {\r\n                title: '收支',\r\n                dataIndex: 'price',\r\n                key: 'price',\r\n                width: \"200px\",\r\n                render: (text, record) => (\r\n                    <span>{judgeIO(record.category.type,record.price)}</span>\r\n                )\r\n            },\r\n            {\r\n                title: '日期',\r\n                dataIndex: 'date',\r\n                key: 'date',\r\n                width: \"200px\"\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'ops',\r\n                width:'200px',\r\n                render:(text, record)=>(\r\n                    <div>\r\n                        <Button type=\"link\"\r\n                                onClick={()=>{\r\n                                    this.handleDel(text,record)\r\n                                }}>删除</Button >\r\n                        <Button type=\"link\"\r\n                                onClick={()=>{\r\n                                    this.handleEdit(text,record)\r\n                                }}>编辑</Button >\r\n                    </div>\r\n                )\r\n            },\r\n        ]\r\n        return (\r\n            <div>\r\n                <Table style={{marginBottom:'30px'}} pagination= {false} bordered rowKey={record => record.id} columns={columns} dataSource={this.state.tableData} />\r\n            </div>\r\n\r\n        )\r\n    }\r\n    handleDel(text,record){\r\n        confirm({\r\n            title: '确定要删除这条数据吗?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: 'Some descriptions',\r\n            okText: '确认',\r\n            okType: 'primary',\r\n            cancelText: '取消',\r\n            onOk() {\r\n                actionHandle.delActivity(text)\r\n            },\r\n        });\r\n        this.setState(()=>({\r\n            visible:false\r\n        }))\r\n    }\r\n    handleEdit(text,record){\r\n        this.props.history.push(`/edit/${text.id}`);\r\n    }\r\n}\r\n\r\nexport default withRouter(PriceList)\r\n","import React, { PureComponent } from 'react';\r\nimport {PieChart, Pie, Legend, Tooltip, Cell} from 'recharts';\r\nimport './Charts.scss'\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\nexport default class Charts extends PureComponent {\r\n    constructor (props){\r\n        super(props)\r\n        this.state = {\r\n            inputData:[],\r\n            outputData:[],\r\n        }\r\n        this.initChartData = this.initChartData.bind(this)\r\n    }\r\n    componentWillMount() {\r\n        this.setState({\r\n            outputData:this.initChartData('outcome'),\r\n            inputData:this.initChartData('income')\r\n        })\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({\r\n            outputData:this.initChartData('outcome',nextProps.items),\r\n            inputData:this.initChartData('income',nextProps.items)\r\n        })\r\n    }\r\n    render() {\r\n        let inputView = null\r\n        let outputView = null\r\n        if (this.state.inputData[0]){\r\n            inputView = <div className={'charts-item'}>\r\n                <PieChart width={400} height={380}>\r\n                    <Pie dataKey=\"value\"\r\n                         isAnimationActive={true}\r\n                         data={this.state.inputData}\r\n                         cx={200} cy={200}\r\n                         outerRadius={120}\r\n                         fill=\"#8884d8\" label>\r\n                        {\r\n                            this.state.inputData.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                        }\r\n                    </Pie>\r\n                    <Tooltip />\r\n                </PieChart>\r\n                <div className='chart-dir'>收入</div>\r\n            </div>\r\n        }\r\n        else {\r\n            inputView = <div className='chart-dir'>本月没有收入</div>\r\n        }\r\n        if (this.state.outputData[0]){\r\n            outputView =  <div className={'charts-item'}>\r\n                <PieChart width={400} height={380}>\r\n                    <Pie dataKey=\"value\"\r\n                         isAnimationActive={true}\r\n                         data={this.state.outputData}\r\n                         cx={200} cy={200}\r\n                         outerRadius={120}\r\n                         fill=\"#8884d8\" label>\r\n                        {\r\n                            this.state.outputData.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                        }\r\n                    </Pie>\r\n                    <Tooltip />\r\n                </PieChart>\r\n                <div className='chart-dir'>支出</div>\r\n            </div>\r\n        }\r\n        else {\r\n            outputView = <div className='chart-dir'>本月没有支出</div>\r\n        }\r\n        return (\r\n            <div className={'charts-ctn'}>\r\n                {inputView}\r\n\r\n                {outputView}\r\n            </div>\r\n\r\n        );\r\n    }\r\n    initChartData(type,tableData = this.props.items){\r\n        let result = {}\r\n        let resultArr = []\r\n        tableData.filter((item)=>{\r\n            return item.category.type === type\r\n        }).forEach((item)=>{\r\n            if (!result[item.category.name]){\r\n                result[item.category.name] = {\r\n                    name:item.category.name,\r\n                    value:item.price * 1\r\n                }\r\n            }\r\n            else {\r\n                result[item.category.name].value += item.price * 1\r\n            }\r\n        })\r\n        for (let key in result){\r\n            resultArr.push(result[key])\r\n        }\r\n        return resultArr\r\n    }\r\n}\r\n","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport { Tabs } from 'antd';\r\nimport { AppleOutlined, AndroidOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types';\r\nimport PriceList from './PriceList'\r\nimport Charts from './Charts'\r\nconst { TabPane } = Tabs;\r\n\r\nconst ViewTabs = (props)=> {\r\n    return (\r\n        <Tabs defaultActiveKey=\"1\">\r\n            <TabPane\r\n                tab= {\r\n                    <span>\r\n                         <AppleOutlined />列表\r\n                    </span>\r\n                }\r\n                key=\"1\">\r\n                <PriceList items={props.items}></PriceList>\r\n            </TabPane>\r\n            <TabPane\r\n                tab= {\r\n                    <span>\r\n                      <AndroidOutlined />图表\r\n                    </span>\r\n                }\r\n                key=\"2\">\r\n                <Charts items={props.items}></Charts>\r\n            </TabPane>\r\n        </Tabs>\r\n    )\r\n}\r\nViewTabs.propTypes = {\r\n    onTabChange:PropTypes.func,\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items:state.tableData,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ViewTabs);\r\n\r\n","import React from 'react'\r\nimport {Button} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getNowMonth } from '../utility'\r\nimport MonthPickerCom from \"../components/MonthPickerCom\";\r\nimport TotalPrice from '../components/TotalPrice'\r\nimport ViewTab from '../components/ViewTab'\r\nimport actionHandle from \"../store/actionHandle\";\r\nclass Home extends React.PureComponent{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            chosenMonth:'',\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        this.initPage()\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <div className=\"main-top\">\r\n                    <MonthPickerCom\r\n                        month={this.state.chosenMonth}\r\n                        changeMonth={this.changeMonth}\r\n                    />\r\n                    <TotalPrice />\r\n                </div>\r\n                <Link to='/Create'><Button type=\"primary\">新增</Button></Link>\r\n                <ViewTab/>\r\n            </div>\r\n        )\r\n    }\r\n    changeMonth(date, dateString){\r\n        actionHandle.getTableData(dateString)\r\n    }\r\n    initPage(){\r\n        let nowMonth = getNowMonth()\r\n        this.setState(()=>({\r\n            chosenMonth:nowMonth\r\n        }))\r\n        actionHandle.getTableData(nowMonth)\r\n    }\r\n}\r\nexport default Home\r\n","import React from 'react'\r\n\r\nconst Tags = (props)=>{\r\n    return (\r\n        <div className={'tags-ctn'}>\r\n            {props.tags.map((item,index)=>{\r\n                return (\r\n                    <div key={item}\r\n                         className={item === props.categoryName?'tags-item tags-item-active':'tags-item'}\r\n                         onClick={()=>{props.chooseClass(item)}}\r\n                    >\r\n                        <div className='tags-icon'>{item.substring(0,1)}</div>\r\n                        <div className={'tags-text'}>{item}</div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React from 'react'\r\nimport { Tabs , Input, Button, DatePicker ,message } from 'antd';\r\nimport './Create.scss'\r\nimport {withRouter} from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport Tags from '../components/Tags'\r\nimport actionHandle from '../store/actionHandle'\r\nimport { getLocalStorage,setLocalStorage,getToday } from '../utility'\r\nconst { TabPane } = Tabs;\r\n\r\nclass Create extends React.PureComponent{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            inputTags:['工资','外快','欠款回收','股票','基金','黄金','期货','其他'],\r\n            outputTags:['饮食','购物','养生','健身','借债','投资','亏损','旅行','其他'],\r\n            submitData:{\r\n                \"id\": Math.random(),\r\n                \"title\": '',\r\n                \"price\": '',\r\n                \"date\": getToday(),\r\n                \"category\": {\r\n                    'name': '饮食',\r\n                    \"type\": 'outcome'\r\n                }\r\n            }\r\n        }\r\n        this.toggleTabs = this.toggleTabs.bind(this)\r\n        this.dateChange = this.dateChange.bind(this)\r\n        this.inputChange = this.inputChange.bind(this)\r\n        this.chooseClass = this.chooseClass.bind(this)\r\n        this.backHome = this.backHome.bind(this)\r\n        this.submitData = this.submitData.bind(this)\r\n        this.getActivityDetail = this.getActivityDetail.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        if(this.props.match.params.id){\r\n            this.getActivityDetail(this.props.match.params.id)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='create-ctn'>\r\n                <Tabs defaultActiveKey=\"outcome\" onChange={this.toggleTabs}>\r\n                    <TabPane tab=\"支出\" key=\"outcome\">\r\n                        <Tags\r\n                            tags={this.state.outputTags}\r\n                            categoryName={this.state.submitData.category.name}\r\n                            chooseClass={this.chooseClass}\r\n                        />\r\n                    </TabPane>\r\n                    <TabPane tab=\"收入\" key=\"income\">\r\n                        <Tags\r\n                            tags={this.state.inputTags}\r\n                            categoryName={this.state.submitData.category.name}\r\n                            chooseClass={this.chooseClass}\r\n                        />\r\n                    </TabPane>\r\n                </Tabs>\r\n                <div className={'form-item-ctn'}>\r\n                    <span><label style={{color:'red'}}>*</label>活动</span>\r\n                    <Input type='text' value={this.state.submitData.title} onChange={this.inputChange} name='title' />\r\n                </div>\r\n\r\n                <div className={'form-item-ctn'}>\r\n                    <span><label style={{color:'red'}}>*</label>金额</span>\r\n                    <Input type='number' value={this.state.submitData.price} onChange={this.inputChange} name='price' />\r\n                </div>\r\n                <div className={'form-item-ctn'}>\r\n                    <span><label style={{color:'red'}}>*</label>日期</span>\r\n                    <DatePicker\r\n                        value={moment(this.state.submitData.date, 'YYYY-MM-DD')}\r\n                        format= 'YYYY-MM-DD'\r\n                        onChange={this.dateChange} />\r\n                </div>\r\n                <div className='btn-ctn'>\r\n                    <Button type=\"primary\" onClick={this.submitData}>\r\n                        提交\r\n                    </Button>\r\n                    <Button style={{marginLeft:'20px'}} onClick={this.backHome}>\r\n                        取消\r\n                    </Button>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    submitData(){\r\n        let _data = this.state.submitData\r\n        if (!_data.title || !_data.title || !_data.date ) {\r\n            message.error('请填写完整的表单');\r\n            return\r\n        }\r\n        const isUpdate = this.props.match.params.id ? true : false\r\n        if(isUpdate){\r\n            message.success('更新成功');\r\n        }\r\n        else {\r\n            message.success('新增成功');\r\n        }\r\n        actionHandle.submitCreate(this.state.submitData,isUpdate)\r\n        this.props.history.push(`/`);\r\n    }\r\n    backHome(){\r\n        this.props.history.push(`/`);\r\n    }\r\n    // 表单输入框改变\r\n    inputChange(e){\r\n        let _submitData = {...this.state.submitData}\r\n        _submitData[e.target.name] = e.target.value\r\n        this.setState(()=>({\r\n            submitData:_submitData\r\n        }))\r\n    }\r\n    // 表单日期改变\r\n    dateChange(date, dateString){\r\n        let _submitData = {...this.state.submitData}\r\n        _submitData.date = dateString\r\n        this.setState(()=>({\r\n            submitData:_submitData\r\n        }))\r\n    }\r\n    // 切换tab\r\n    toggleTabs (key){\r\n        let _submitData = {...this.state.submitData}\r\n        _submitData.category.type = key\r\n        this.setState(()=>({\r\n            submitData:_submitData\r\n        }))\r\n    }\r\n    // 选择收入分类\r\n    chooseClass(categoryName){\r\n        let _submitData = {...this.state.submitData}\r\n        _submitData.category.name = categoryName\r\n        this.setState(()=>({\r\n            submitData:_submitData\r\n        }))\r\n    }\r\n    getActivityDetail(id){\r\n        let tableData = getLocalStorage('tableData')\r\n        for (let i=0;i < tableData.length;i++){\r\n            if(tableData[i].id === id){\r\n                this.setState(()=>({\r\n                    submitData:{...tableData[i]},\r\n                }))\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(Create)\r\n","import React from 'react';\nimport { Route,HashRouter,Link } from \"react-router-dom\";\nimport { Layout,ConfigProvider } from 'antd';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport './App.scss'\nimport Home from './containers/Home'\nimport Create from './containers/Create'\nmoment.locale('zh');\nconst { Header, Content } = Layout;\nclass App extends React.Component{\n    render() {\n        return (\n            <HashRouter>\n                <ConfigProvider  locale={zhCN}>\n                <div className=\"App\">\n\n                        <Layout>\n                            <Header className=\"header\">\n                                <Link to=\"/\"> 在线账本系统 </Link>\n                            </Header>\n                            <Content>\n                                <Route path='/' exact component={Home}></Route>\n                                <Route path='/Create' component={Create}></Route>\n                                <Route path='/edit/:id' component={Create}></Route>\n                            </Content>\n                        </Layout>\n\n                </div>\n                </ConfigProvider>\n            </HashRouter>\n        );\n    }\n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './assets/css/common.scss'\nimport {Provider} from 'react-redux'\nimport  store from './store'\nimport './mockData'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nconst RenderApp = (\n    <Provider store={store}>\n        <App></App>\n    </Provider>\n)\nReactDOM.render(RenderApp, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}